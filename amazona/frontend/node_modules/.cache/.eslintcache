[{"/Users/vaimiticianfarani/Desktop/react node js/amazona/frontend/src/index.js":"1","/Users/vaimiticianfarani/Desktop/react node js/amazona/frontend/src/App.js":"2","/Users/vaimiticianfarani/Desktop/react node js/amazona/frontend/src/reportWebVitals.js":"3","/Users/vaimiticianfarani/Desktop/react node js/amazona/frontend/src/Store.js":"4","/Users/vaimiticianfarani/Desktop/react node js/amazona/frontend/src/screens/HomeScreen.js":"5","/Users/vaimiticianfarani/Desktop/react node js/amazona/frontend/src/screens/CartScreen.js":"6","/Users/vaimiticianfarani/Desktop/react node js/amazona/frontend/src/screens/ProductScreen.js":"7","/Users/vaimiticianfarani/Desktop/react node js/amazona/frontend/src/screens/SigninScreen.js":"8","/Users/vaimiticianfarani/Desktop/react node js/amazona/frontend/src/data.js":"9","/Users/vaimiticianfarani/Desktop/react node js/amazona/frontend/src/utils.js":"10","/Users/vaimiticianfarani/Desktop/react node js/amazona/frontend/src/components/Product.js":"11","/Users/vaimiticianfarani/Desktop/react node js/amazona/frontend/src/components/LoadingBox.js":"12","/Users/vaimiticianfarani/Desktop/react node js/amazona/frontend/src/components/MessageBox.js":"13","/Users/vaimiticianfarani/Desktop/react node js/amazona/frontend/src/components/Rating.js":"14","/Users/vaimiticianfarani/Desktop/react node js/amazona/frontend/src/screens/ShippingAddressScreen.js":"15","/Users/vaimiticianfarani/Desktop/react node js/amazona/frontend/src/components/CheckoutSteps.js":"16","/Users/vaimiticianfarani/Desktop/react node js/amazona/frontend/src/screens/SignupScreen.js":"17","/Users/vaimiticianfarani/Desktop/react node js/amazona/frontend/src/screens/PaymentMethodScreen.js":"18","/Users/vaimiticianfarani/Desktop/react node js/amazona/frontend/src/screens/PlaceOrderScreen.js":"19","/Users/vaimiticianfarani/Desktop/react node js/amazona/frontend/src/screens/OrderScreen.js":"20","/Users/vaimiticianfarani/Desktop/react node js/amazona/frontend/src/screens/OrderHistoryScreen.js":"21","/Users/vaimiticianfarani/Desktop/react node js/amazona/frontend/src/screens/ProfileScreen.js":"22"},{"size":882,"mtime":1651593812209,"results":"23","hashOfConfig":"24"},{"size":4553,"mtime":1652029038157,"results":"25","hashOfConfig":"24"},{"size":362,"mtime":1647962578000,"results":"26","hashOfConfig":"24"},{"size":2501,"mtime":1651506202715,"results":"27","hashOfConfig":"24"},{"size":2064,"mtime":1648484808000,"results":"28","hashOfConfig":"24"},{"size":4482,"mtime":1649011870000,"results":"29","hashOfConfig":"24"},{"size":4716,"mtime":1649010494000,"results":"30","hashOfConfig":"24"},{"size":2461,"mtime":1650548917082,"results":"31","hashOfConfig":"24"},{"size":1234,"mtime":1648479628000,"results":"32","hashOfConfig":"24"},{"size":155,"mtime":1648485340000,"results":"33","hashOfConfig":"24"},{"size":1640,"mtime":1649013992000,"results":"34","hashOfConfig":"24"},{"size":234,"mtime":1648484468000,"results":"35","hashOfConfig":"24"},{"size":171,"mtime":1648484460000,"results":"36","hashOfConfig":"24"},{"size":1432,"mtime":1648464586000,"results":"37","hashOfConfig":"24"},{"size":3438,"mtime":1650819370453,"results":"38","hashOfConfig":"24"},{"size":484,"mtime":1650819305148,"results":"39","hashOfConfig":"24"},{"size":3272,"mtime":1650821744705,"results":"40","hashOfConfig":"24"},{"size":2162,"mtime":1650824355576,"results":"41","hashOfConfig":"24"},{"size":6101,"mtime":1651507314375,"results":"42","hashOfConfig":"24"},{"size":8493,"mtime":1651594256800,"results":"43","hashOfConfig":"24"},{"size":2961,"mtime":1652014808556,"results":"44","hashOfConfig":"24"},{"size":3153,"mtime":1652034071590,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},"1euy1lg",{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"49"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"49"},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"49"},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"49"},{"filePath":"105","messages":"106","suppressedMessages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"49"},{"filePath":"109","messages":"110","suppressedMessages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"112","messages":"113","suppressedMessages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","suppressedMessages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118"},"/Users/vaimiticianfarani/Desktop/react node js/amazona/frontend/src/index.js",[],[],["119","120"],"/Users/vaimiticianfarani/Desktop/react node js/amazona/frontend/src/App.js",["121"],[],"import logo from './logo.svg';\nimport './App.css';\nimport { BrowserRouter, Routes, Route, Link } from 'react-router-dom';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport HomeScreen from './screens/HomeScreen';\nimport ProductScreen from './screens/ProductScreen';\nimport NavBar from 'react-bootstrap/Navbar';\nimport Badge from 'react-bootstrap/Badge';\nimport Nav from 'react-bootstrap/Nav';\nimport NavDropdown from 'react-bootstrap/NavDropdown';\nimport Container from 'react-bootstrap/Container';\nimport { LinkContainer } from 'react-router-bootstrap';\nimport { useContext } from 'react';\nimport { Store } from './Store';\nimport CartScreen from './screens/CartScreen';\nimport SigninScreen from './screens/SigninScreen';\nimport ShippingAddressScreen from './screens/ShippingAddressScreen';\nimport SignupScreen from './screens/SignupScreen';\nimport PaymentMethodScreen from './screens/PaymentMethodScreen';\nimport PlaceOrderScreen from './screens/PlaceOrderScreen';\nimport OrderScreen from './screens/OrderScreen';\nimport OrderHistoryScreen from './screens/OrderHistoryScreen';\nimport Navbar from 'react-bootstrap/Navbar';\nimport ProfileScreen from './screens/ProfileScreen';\n\nfunction App() {\n  const { state, dispatch: ctxDispatch } = useContext(Store);\n  const { cart, userInfo } = state;\n\n  const signoutHandler = () => {\n    ctxDispatch({ type: 'USER_SIGNOUT' });\n    localStorage.removeItem('userInfo');\n    localStorage.removeItem('shippingAddress');\n    localStorage.removeItem('paymentMethod');\n  };\n  return (\n    <BrowserRouter>\n      <div className=\"d-flex flex-column site-container\">\n        <ToastContainer position=\"bottom-center\" limit={1} />\n        <header>\n          <NavBar bg=\"dark\" variant=\"dark\" expand=\"lg\">\n            <Container>\n              <LinkContainer to=\"/\">\n                <NavBar.Brand>Amazona</NavBar.Brand>\n              </LinkContainer>\n              <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n              <Navbar.Collapse id=\"baisc-navbar-nav\">\n                <Nav className=\"me-auto w-100 justify-content-end\">\n                  <Link to=\"/cart\" className=\"nav-link\">\n                    Cart\n                    {cart.cartItems.length > 0 && (\n                      <Badge pill bg=\"danger\">\n                        {cart.cartItems.reduce((a, c) => a + c.quantity, 0)}\n                      </Badge>\n                    )}\n                  </Link>\n                  {userInfo ? (\n                    <NavDropdown title={userInfo.name} id=\"basic-nav-dropdown\">\n                      <LinkContainer to=\"/profile\">\n                        <NavDropdown.Item>User Profile</NavDropdown.Item>\n                      </LinkContainer>\n                      <LinkContainer to=\"/orderhistory\">\n                        <NavDropdown.Item>Order History</NavDropdown.Item>\n                      </LinkContainer>\n                      <NavDropdown.Divider />\n                      <Link\n                        className=\"dropdown-item\"\n                        to=\"#signout\"\n                        onClick={signoutHandler}\n                      >\n                        Sign Out\n                      </Link>\n                    </NavDropdown>\n                  ) : (\n                    <Link className=\"nav-link\" to=\"/signin\">\n                      Sign In\n                    </Link>\n                  )}\n                </Nav>\n              </Navbar.Collapse>\n            </Container>\n          </NavBar>\n        </header>\n        <main>\n          <Container className=\"mt-3\">\n            <Routes>\n              <Route path=\"/product/:slug\" element={<ProductScreen />} />\n              <Route path=\"/cart\" element={<CartScreen />} />\n              <Route path=\"/signin\" element={<SigninScreen />} />\n              <Route path=\"/signup\" element={<SignupScreen />} />\n              <Route path=\"/shipping\" element={<ShippingAddressScreen />} />\n              <Route path=\"/payment\" element={<PaymentMethodScreen />} />\n              <Route path=\"/placeorder\" element={<PlaceOrderScreen />} />\n              <Route path=\"/order/:id\" element={<OrderScreen />} />\n              <Route path=\"/orderhistory/\" element={<OrderHistoryScreen />} />\n              <Route path=\"/profile/\" element={<ProfileScreen />} />\n              <Route path=\"/\" element={<HomeScreen />} />\n            </Routes>\n          </Container>\n        </main>\n        <footer className=\"text-center\">All right reserved</footer>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","/Users/vaimiticianfarani/Desktop/react node js/amazona/frontend/src/reportWebVitals.js",[],[],"/Users/vaimiticianfarani/Desktop/react node js/amazona/frontend/src/Store.js",[],[],"/Users/vaimiticianfarani/Desktop/react node js/amazona/frontend/src/screens/HomeScreen.js",["122","123"],[],"import data from '../data';\r\nimport axios from 'axios';\r\nimport { Helmet } from 'react-helmet-async';\r\nimport { useEffect, useReducer, useState } from 'react';\r\nimport logger from 'use-reducer-logger';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Product from '../components/Product';\r\nimport LoadingBox from '../components/LoadingBox';\r\nimport MessageBox from '../components/MessageBox';\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'FETCH_REQUEST':\r\n      return { ...state, loading: true };\r\n    case 'FETCH_SUCCESS':\r\n      return { ...state, products: action.payload, loading: false };\r\n    case 'FETCH_FAIL':\r\n      return { ...state, loading: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nfunction HomeScreen() {\r\n  const [{ loading, error, products }, dispatch] = useReducer(logger(reducer), {\r\n    products: [],\r\n    loading: true,\r\n    error: '',\r\n  });\r\n  // const [products, setProducts] = useState([]);\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      dispatch({ type: 'FETCH_REQUEST' });\r\n      try {\r\n        const result = await axios.get('/api/products');\r\n        dispatch({ type: 'FETCH_SUCCESS', payload: result.data });\r\n      } catch (err) {\r\n        dispatch({ type: 'FETCH_FAIL', payload: err.message });\r\n      }\r\n\r\n      // setProducts(result.data);\r\n    };\r\n    fetchData();\r\n  }, []);\r\n  return (\r\n    <div>\r\n      <Helmet>\r\n        <title>Amazona</title>\r\n      </Helmet>\r\n      <h1>Featured Products</h1>\r\n      <div className=\"products\">\r\n        {loading ? (\r\n          <LoadingBox />\r\n        ) : error ? (\r\n          <MessageBox variant=\"danger\">{error}</MessageBox>\r\n        ) : (\r\n          <Row>\r\n            {products.map((product) => (\r\n              <Col key={product.slug} sm={6} md={4} lg={3} className=\"mb-3\">\r\n                <Product product={product}></Product>\r\n              </Col>\r\n            ))}\r\n          </Row>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default HomeScreen;\r\n","/Users/vaimiticianfarani/Desktop/react node js/amazona/frontend/src/screens/CartScreen.js",[],[],"/Users/vaimiticianfarani/Desktop/react node js/amazona/frontend/src/screens/ProductScreen.js",["124","125","126"],[],"import axios from 'axios';\r\nimport { useContext, useEffect, useReducer } from 'react';\r\nimport { Helmet } from 'react-helmet-async';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Badge from 'react-bootstrap/Badge';\r\nimport Button from 'react-bootstrap/Button';\r\nimport ListGroup from 'react-bootstrap/ListGroup';\r\nimport { Navigate, useNavigate, useParams } from 'react-router-dom';\r\nimport logger from 'use-reducer-logger';\r\nimport Product from '../components/Product';\r\nimport Rating from '../components/Rating';\r\nimport LoadingBox from '../components/LoadingBox';\r\nimport MessageBox from '../components/MessageBox';\r\nimport { getError } from '../utils';\r\nimport { Store } from '../Store';\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'FETCH_REQUEST':\r\n      return { ...state, loading: true };\r\n    case 'FETCH_SUCCESS':\r\n      return { ...state, product: action.payload, loading: false };\r\n    case 'FETCH_FAIL':\r\n      return { ...state, loading: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nfunction ProductScreen() {\r\n  const navigate = useNavigate();\r\n  const params = useParams();\r\n  const { slug } = params;\r\n\r\n  const [{ loading, error, product }, dispatch] = useReducer(reducer, {\r\n    product: [],\r\n    loading: true,\r\n    error: '',\r\n  });\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      dispatch({ type: 'FETCH_REQUEST' });\r\n      try {\r\n        const result = await axios.get(`/api/products/slug/${slug}`);\r\n        dispatch({ type: 'FETCH_SUCCESS', payload: result.data });\r\n      } catch (err) {\r\n        dispatch({ type: 'FETCH_FAIL', payload: getError(err) });\r\n      }\r\n    };\r\n    fetchData();\r\n  }, [slug]);\r\n\r\n  const { state, dispatch: cxtDispatch } = useContext(Store);\r\n  const { cart } = state;\r\n  const addToCartHandler = async () => {\r\n    const existItem = cart.cartItems.find((x) => x._id === product._id);\r\n    const quantity = existItem ? existItem.quantity + 1 : 1;\r\n    const { data } = await axios.get(`/api/products/${product._id}`);\r\n    if (data.countInStock < quantity) {\r\n      window.alert('Out of stock');\r\n      return;\r\n    }\r\n    cxtDispatch({\r\n      type: 'CART_ADD_ITEM',\r\n      payload: { ...product, quantity },\r\n    });\r\n    navigate('/cart');\r\n  };\r\n  return loading ? (\r\n    <LoadingBox />\r\n  ) : error ? (\r\n    <MessageBox variant=\"danger\">{error}</MessageBox>\r\n  ) : (\r\n    <div>\r\n      <Row>\r\n        <Col md={6}>\r\n          <img\r\n            className=\"img-large\"\r\n            src={product.image}\r\n            alt={product.name}\r\n          ></img>\r\n        </Col>\r\n        <Col md={3}>\r\n          <ListGroup variant=\"flush\">\r\n            <ListGroup.Item>\r\n              <Helmet>\r\n                <title>{product.name}</title>\r\n              </Helmet>\r\n            </ListGroup.Item>\r\n            <ListGroup.Item>\r\n              <Rating>\r\n                rating={product.rating}\r\n                numReviews={product.numReviews}\r\n              </Rating>\r\n            </ListGroup.Item>\r\n            <ListGroup.Item>\r\n              <span>Price: ${product.price}</span>\r\n            </ListGroup.Item>\r\n            <ListGroup.Item>\r\n              Description:\r\n              <p>{product.description}</p>\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Col>\r\n        <Col md={3}>\r\n          <Card>\r\n            <Card.Body>\r\n              <ListGroup variant=\"flush\">\r\n                <ListGroup.Item>\r\n                  <Row>\r\n                    <Col>Price:</Col>\r\n                    <Col>{product.price}</Col>\r\n                  </Row>\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>\r\n                  <Row>\r\n                    <Col>Status:</Col>\r\n                    <Col>Status:</Col>\r\n                    <Col>\r\n                      {product.countInStock > 0 ? (\r\n                        <Badge bg=\"success\">In Stock</Badge>\r\n                      ) : (\r\n                        <Badge bg=\"danger\">Unavailable</Badge>\r\n                      )}\r\n                    </Col>\r\n                  </Row>\r\n                </ListGroup.Item>\r\n\r\n                {product.countInStock > 0 && (\r\n                  <ListGroup.Item>\r\n                    <div className=\"d-grid\">\r\n                      <Button onClick={addToCartHandler} variant=\"primary\">\r\n                        Add to Cart\r\n                      </Button>\r\n                    </div>\r\n                  </ListGroup.Item>\r\n                )}\r\n              </ListGroup>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n}\r\nexport default ProductScreen;\r\n","/Users/vaimiticianfarani/Desktop/react node js/amazona/frontend/src/screens/SigninScreen.js",[],[],"/Users/vaimiticianfarani/Desktop/react node js/amazona/frontend/src/data.js",[],[],"/Users/vaimiticianfarani/Desktop/react node js/amazona/frontend/src/utils.js",[],[],"/Users/vaimiticianfarani/Desktop/react node js/amazona/frontend/src/components/Product.js",[],[],"/Users/vaimiticianfarani/Desktop/react node js/amazona/frontend/src/components/LoadingBox.js",[],[],"/Users/vaimiticianfarani/Desktop/react node js/amazona/frontend/src/components/MessageBox.js",[],[],"/Users/vaimiticianfarani/Desktop/react node js/amazona/frontend/src/components/Rating.js",[],[],"/Users/vaimiticianfarani/Desktop/react node js/amazona/frontend/src/screens/ShippingAddressScreen.js",[],[],"/Users/vaimiticianfarani/Desktop/react node js/amazona/frontend/src/components/CheckoutSteps.js",[],[],"/Users/vaimiticianfarani/Desktop/react node js/amazona/frontend/src/screens/SignupScreen.js",[],[],"/Users/vaimiticianfarani/Desktop/react node js/amazona/frontend/src/screens/PaymentMethodScreen.js",["127","128"],[],"import React, { useContext, useEffect, useState } from 'react';\nimport { Helmet } from 'react-helmet-async';\nimport { useNavigate } from 'react-router-dom';\nimport CheckoutSteps from '../components/CheckoutSteps';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport { Store } from '../Store';\n\nexport default function PaymentMethodScreen() {\n  const navigate = useNavigate();\n  const { state, dispatch: ctxDispatch } = useContext(Store);\n  // save data shippingAddress > PaymentMethod > PlaceOrder\n  const {\n    cart: { shippingAddress, paymentMethod },\n  } = state;\n\n  const [paymentMethodName, setPaymentMethod] = useState(\n    paymentMethod || 'PayPal'\n  );\n\n  useEffect(() => {\n    if (!shippingAddress.address) {\n      navigate('/shipping');\n    }\n  }, [shippingAddress, navigate]);\n  const submitHandler = (e) => {\n    e.preventDefault();\n    ctxDispatch({ type: 'SAVE_PAYMENT_METHOD', payload: paymentMethodName });\n    localStorage.setItem('paymentMethod', paymentMethodName);\n    navigate('/placeorder');\n  };\n  return (\n    <div>\n      <CheckoutSteps step1 step2 step3></CheckoutSteps>\n      <div className=\"container small-container\">\n        <Helmet>\n          <title>Payment Method</title>\n        </Helmet>\n        <h1 className=\"my-3\">Payment Method</h1>\n        <Form onSubmit={submitHandler}>\n          <div className=\"mb-3\">\n            <Form.Check\n              type=\"radio\"\n              id=\"PayPal\"\n              label=\"PayPal\"\n              value=\"PayPal\"\n              checked={paymentMethodName == 'PayPal'}\n              onChange={(e) => setPaymentMethod(e.target.value)}\n            ></Form.Check>\n          </div>\n          <div className=\"mb-3\">\n            <Form.Check\n              type=\"radio\"\n              id=\"Stripe\"\n              label=\"Stripe\"\n              value=\"Stripe\"\n              checked={paymentMethodName == 'Stripe'}\n              onChange={(e) => setPaymentMethod(e.target.value)}\n            ></Form.Check>\n          </div>\n          <div className=\"mb-3\">\n            <Button type=\"submit\">Continue</Button>\n          </div>\n        </Form>\n      </div>\n    </div>\n  );\n}\n","/Users/vaimiticianfarani/Desktop/react node js/amazona/frontend/src/screens/PlaceOrderScreen.js",["129","130"],[],"import Axios from 'axios';\nimport React, { useContext, useEffect, useReducer } from 'react';\nimport { Helmet } from 'react-helmet-async';\nimport { Link, Navigate, useNavigate } from 'react-router-dom';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport { Store } from '../Store';\nimport { getError } from '../utils';\nimport CheckoutSteps from '../components/CheckoutSteps';\nimport ListGroupItem from 'react-bootstrap/ListGroupItem';\nimport { toast } from 'react-toastify';\nimport LoadingBox from '../components/LoadingBox';\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'CREATE_REQUEST':\n      return { ...state, loading: true };\n    case 'CREATE_SUCCESS':\n      return { ...state, loading: false };\n    case 'CREATE_FAIL':\n      return { ...state, loading: false };\n    default:\n      return state;\n  }\n};\nexport default function PlaceOrderScreen() {\n  const navigate = useNavigate();\n\n  const [{ loading }, dispatch] = useReducer(reducer, {\n    loading: false,\n  });\n\n  const { state, dispatch: ctxDispatch } = useContext(Store);\n  const { cart, userInfo } = state;\n\n  const round2 = (num) => Math.round(num * 100 + Number.EPSILON) / 100; // 123.2345 => 123.23 pas plus long\n  cart.itemsPrice = round2(\n    cart.cartItems.reduce((a, c) => a + c.quantity * c.price, 0)\n  );\n  cart.shippingPrice = cart.itemsPrice > 100 ? round2(0) : round2(10);\n  cart.taxPrice = round2(0.15 * cart.itemsPrice);\n  cart.totalPrice = cart.itemsPrice + cart.shippingPrice + cart.taxPrice;\n\n  const placeOrderHandler = async () => {\n    try {\n      dispatch({ type: 'CREATE_REQUEST' });\n\n      const { data } = await Axios.post(\n        '/api/orders',\n        {\n          orderItems: cart.cartItems,\n          shippingAddress: cart.shippingAddress,\n          paymentMethod: cart.paymentMethod,\n          itemsPrice: cart.itemsPrice,\n          shippingPrice: cart.shippingPrice,\n          taxPrice: cart.taxPrice,\n          totalPrice: cart.totalPrice,\n        },\n        {\n          headers: {\n            authorization: `Bearer ${userInfo.token}`,\n          },\n        }\n      );\n      ctxDispatch({ type: 'CART_CLEAR' });\n      dispatch({ type: 'CREATE_SUCCESS' });\n      localStorage.removeItem('cartItems');\n      navigate(`/order/${data.order._id}`);\n    } catch (err) {\n      dispatch({ type: 'CREATE_FAIL' });\n      toast.error(getError(err));\n    }\n  };\n\n  useEffect(() => {\n    if (!cart.paymentMethod) {\n      navigate('/payment');\n    }\n  }, [cart, navigate]);\n  return (\n    <div>\n      <CheckoutSteps step1 step2 step3 step4></CheckoutSteps>\n      <Helmet>\n        <title> Preview Order</title>\n      </Helmet>\n      <h1 className=\"my-3\">Preview Order</h1>\n      <Row>\n        <Col md={8}>\n          <Card className=\"mb-3\">\n            <Card.Body>\n              <Card.Title>Shipping</Card.Title>\n              <Card.Text>\n                <strong>Name:</strong> {cart.shippingAddress.fullName}\n                <br />\n                <strong>Address:</strong> {cart.shippingAddress.address},\n                {cart.shippingAddress.city}, {cart.shippingAddress.postalCode},\n                {cart.shippingAddress.country}\n              </Card.Text>\n              <Link to=\"/shipping\">Edit</Link>\n            </Card.Body>\n          </Card>\n          <Card className=\"mb-3\">\n            <Card.Body>\n              <Card.Title>Payment</Card.Title>\n              <Card.Text>\n                <strong>Method:</strong> {cart.paymentMethod}\n              </Card.Text>\n              <Link to=\"/payment\">Edit</Link>\n            </Card.Body>\n          </Card>\n          <Card className=\"mb-3\">\n            <Card.Body>\n              <ListGroup variant=\"flust\">\n                {cart.cartItems.map((item) => (\n                  <ListGroup.Item key={item._id}>\n                    <Row className=\"align-items-center\">\n                      <Col md={6}>\n                        <img\n                          src={item.image}\n                          alt={item.name}\n                          className=\"img-fluid round img-thumbnail\"\n                        ></img>{' '}\n                        <Link to={`/product/${item.slug}`}>{item.name}</Link>\n                      </Col>\n                      <Col md={3}>\n                        <span>{item.quantity}</span>\n                      </Col>\n                      <Col md={3}>${item.price}</Col>\n                    </Row>\n                  </ListGroup.Item>\n                ))}\n              </ListGroup>\n              <Link to=\"/cart\">Edit</Link>\n            </Card.Body>\n          </Card>\n        </Col>\n        <Col md={4}>\n          <Card>\n            <Card.Body>\n              <Card.Title>Order Summary</Card.Title>\n              <ListGroup variant=\"flush\">\n                <ListGroup.Item>\n                  <Row>\n                    <Col>Items</Col>\n                    <Col>${cart.itemsPrice.toFixed(2)}</Col>\n                  </Row>\n                </ListGroup.Item>\n                <ListGroup.Item>\n                  <Row>\n                    <Col>Shipping</Col>\n                    <Col>${cart.shippingPrice.toFixed(2)}</Col>\n                  </Row>\n                </ListGroup.Item>\n                <ListGroup.Item>\n                  <Row>\n                    <Col>Tax</Col>\n                    <Col>${cart.taxPrice.toFixed(2)}</Col>\n                  </Row>\n                </ListGroup.Item>\n                <ListGroup.Item>\n                  <div className=\"d-grid\">\n                    <Button\n                      type=\"button\"\n                      onClick={placeOrderHandler}\n                      disabled={cart.cartItems.length === 0}\n                    >\n                      Place Order\n                    </Button>\n                  </div>\n                  {loading && <LoadingBox></LoadingBox>}\n                </ListGroup.Item>\n              </ListGroup>\n            </Card.Body>\n          </Card>\n        </Col>\n      </Row>\n    </div>\n  );\n}\n","/Users/vaimiticianfarani/Desktop/react node js/amazona/frontend/src/screens/OrderScreen.js",[],[],"/Users/vaimiticianfarani/Desktop/react node js/amazona/frontend/src/screens/OrderHistoryScreen.js",[],[],"/Users/vaimiticianfarani/Desktop/react node js/amazona/frontend/src/screens/ProfileScreen.js",["131","132"],[],"import React, { useContext, useReducer, useState } from 'react';\nimport { Helmet } from 'react-helmet-async';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport { Store } from '../Store';\nimport { toast } from 'react-toastify';\nimport { getError } from '../utils';\nimport axios from 'axios';\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'UPDATE_REQUEST':\n      return { ...state, loadingUpdate: true };\n    case 'UPDATE_SUCCESS':\n      return { ...state, loadingUpdate: false };\n    case 'UPDATE_FAIL':\n      return { ...state, loadingUpdate: false };\n\n    default:\n      return state;\n  }\n};\n\nexport default function ProfileScreen() {\n  const { state, dispatch: ctxDispatch } = useContext(Store);\n  const { userInfo } = state;\n  const [name, setName] = useState(userInfo.name);\n  const [email, setEmail] = useState(userInfo.email);\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n\n  const [{ loadingUpdate }, dispatch] = useReducer(reducer, {\n    loadingUpdate: false,\n  });\n\n  const submitHandler = async (e) => {\n    e.preventDefault();\n    try {\n      const { data } = await axios.put(\n        '/api/users/profile',\n        {\n          name,\n          email,\n          password,\n        },\n        {\n          headers: { Authorization: `Bearer ${userInfo.token}` },\n        }\n      );\n      dispatch({\n        type: 'UPDATE_SUCCESS',\n      });\n      ctxDispatch({ type: 'USER_SIGNIN', payload: data });\n      localStorage.setItem('userInfo', JSON.stringify(data));\n      toast.success('User updated successfully');\n    } catch (err) {\n      dispatch({\n        type: 'FETCH_FAIL',\n      });\n      toast.error(getError(err));\n    }\n  };\n\n  return (\n    <div className=\"container small-container\">\n      <Helmet>\n        <title>User Profile</title>\n      </Helmet>\n      <h1 className=\"my-3\">User Profile</h1>\n      <form onSubmit={submitHandler}>\n        <Form.Group className=\"mb-3\" controlId=\"name\">\n          <Form.Label>Name</Form.Label>\n          <Form.Control\n            value={name}\n            onChange={(e) => setName(e.target.value)}\n            required\n          />\n        </Form.Group>\n        <Form.Group className=\"mb-3\" controlId=\"name\">\n          <Form.Label>Email</Form.Label>\n          <Form.Control\n            type=\"email\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n            required\n          />\n        </Form.Group>\n        <Form.Group className=\"mb-3\" controlId=\"password\">\n          <Form.Label>Password</Form.Label>\n          <Form.Control\n            type=\"password\"\n            onChange={(e) => setPassword(e.target.value)}\n          />\n        </Form.Group>\n        <Form.Group className=\"mb-3\" controlId=\"password\">\n          <Form.Label>Confirm Password</Form.Label>\n          <Form.Control\n            type=\"password\"\n            onChange={(e) => setConfirmPassword(e.target.value)}\n          />\n        </Form.Group>\n        <div className=\"mb-3\">\n          <Button type=\"submit\">Update</Button>\n        </div>\n      </form>\n    </div>\n  );\n}\n",{"ruleId":"133","replacedBy":"134"},{"ruleId":"135","replacedBy":"136"},{"ruleId":"137","severity":1,"message":"138","line":1,"column":8,"nodeType":"139","messageId":"140","endLine":1,"endColumn":12},{"ruleId":"137","severity":1,"message":"141","line":1,"column":8,"nodeType":"139","messageId":"140","endLine":1,"endColumn":12},{"ruleId":"137","severity":1,"message":"142","line":4,"column":33,"nodeType":"139","messageId":"140","endLine":4,"endColumn":41},{"ruleId":"137","severity":1,"message":"143","line":10,"column":10,"nodeType":"139","messageId":"140","endLine":10,"endColumn":18},{"ruleId":"137","severity":1,"message":"144","line":11,"column":8,"nodeType":"139","messageId":"140","endLine":11,"endColumn":14},{"ruleId":"137","severity":1,"message":"145","line":12,"column":8,"nodeType":"139","messageId":"140","endLine":12,"endColumn":15},{"ruleId":"146","severity":1,"message":"147","line":47,"column":42,"nodeType":"148","messageId":"149","endLine":47,"endColumn":44},{"ruleId":"146","severity":1,"message":"147","line":57,"column":42,"nodeType":"148","messageId":"149","endLine":57,"endColumn":44},{"ruleId":"137","severity":1,"message":"143","line":4,"column":16,"nodeType":"139","messageId":"140","endLine":4,"endColumn":24},{"ruleId":"137","severity":1,"message":"150","line":13,"column":8,"nodeType":"139","messageId":"140","endLine":13,"endColumn":21},{"ruleId":"137","severity":1,"message":"151","line":30,"column":10,"nodeType":"139","messageId":"140","endLine":30,"endColumn":25},{"ruleId":"137","severity":1,"message":"152","line":32,"column":12,"nodeType":"139","messageId":"140","endLine":32,"endColumn":25},"no-native-reassign",["153"],"no-negated-in-lhs",["154"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'data' is defined but never used.","'useState' is defined but never used.","'Navigate' is defined but never used.","'logger' is defined but never used.","'Product' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'ListGroupItem' is defined but never used.","'confirmPassword' is assigned a value but never used.","'loadingUpdate' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]