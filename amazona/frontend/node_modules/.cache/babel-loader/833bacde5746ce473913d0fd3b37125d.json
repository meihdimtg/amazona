{"ast":null,"code":"var _jsxFileName = \"/Users/vaimiticianfarani/Desktop/react node js/amazona/frontend/src/screens/ProfileScreen.js\",\n    _s2 = $RefreshSig$();\n\nimport React, { useContext, useState } from 'react';\nimport { Helmet } from 'react-helmet-async';\nimport { Store } from '../Store';\nimport Form from 'react-bootstrap/Form';\nimport { useNavigate } from 'react-router-dom';\nimport Button from 'react-bootstrap/Button'; // function modification des informations du profile\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ProfileScreen() {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  // insert les infos dans la DB\n  const {\n    state,\n    dispatch: ctxDispatch\n  } = useContext(Store);\n  const {\n    userInfo\n  } = state; // formulaire répétitif, name, setName etc...\n\n  const [name, setName] = useState(userInfo.name);\n  const [email, setEmail] = useState(userInfo.email);\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n\n  const submitHandler = async () => {\n    _s();\n\n    navigate = useNavigate();\n  };\n\n  _s(submitHandler, \"7z+bV9xHBQ1A1bt6m/1oQLk0tZA=\", false, function () {\n    return [useNavigate];\n  });\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container small-container\",\n    children: [/*#__PURE__*/_jsxDEV(Helmet, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: \" User Profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"my-3\",\n      children: \"User Profile\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        controlId: \"name\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \" Name \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          value: name,\n          onChange: e => setName(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        controlId: \"email\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \" Email \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          value: email,\n          onChange: e => setEmail(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        controlId: \"password\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \" Password \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"password\",\n          onChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        controlId: \"password\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \" Confirm Password \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"password\",\n          onChange: e => setConfirmPassword(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          children: \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(ProfileScreen, \"aEjYzmhyd3AjHYweNDP4cYItX+0=\");\n\n_c = ProfileScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProfileScreen\");","map":{"version":3,"sources":["/Users/vaimiticianfarani/Desktop/react node js/amazona/frontend/src/screens/ProfileScreen.js"],"names":["React","useContext","useState","Helmet","Store","Form","useNavigate","Button","ProfileScreen","state","dispatch","ctxDispatch","userInfo","name","setName","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","submitHandler","navigate","e","target","value"],"mappings":"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","sourcesContent":["import React, { useContext, useState } from 'react';\nimport { Helmet } from 'react-helmet-async';\nimport { Store } from '../Store';\nimport Form from 'react-bootstrap/Form';\nimport { useNavigate } from 'react-router-dom';\nimport Button from 'react-bootstrap/Button';\n\n// function modification des informations du profile\nexport default function ProfileScreen() {\n  // insert les infos dans la DB\n  const { state, dispatch: ctxDispatch } = useContext(Store);\n  const { userInfo } = state;\n  // formulaire répétitif, name, setName etc...\n  const [name, setName] = useState(userInfo.name);\n  const [email, setEmail] = useState(userInfo.email);\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n\n  const submitHandler = async () => {\n    navigate = useNavigate();\n  };\n\n  return (\n    <div className=\"container small-container\">\n      <Helmet>\n        <title> User Profile</title>\n      </Helmet>\n      <h1 className=\"my-3\">User Profile</h1>\n      <form onSubmit={submitHandler}>\n        <Form.Group className=\"mb-3\" controlId=\"name\">\n          <Form.Label> Name </Form.Label>\n          <Form.Control\n            value={name}\n            onChange={(e) => setName(e.target.value)}\n            required\n          />\n        </Form.Group>\n        <Form.Group className=\"mb-3\" controlId=\"email\">\n          <Form.Label> Email </Form.Label>\n          <Form.Control\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n            required\n          />\n        </Form.Group>\n        <Form.Group className=\"mb-3\" controlId=\"password\">\n          <Form.Label> Password </Form.Label>\n          <Form.Control\n            type=\"password\"\n            onChange={(e) => setPassword(e.target.value)}\n          />\n        </Form.Group>\n        <Form.Group className=\"mb-3\" controlId=\"password\">\n          <Form.Label> Confirm Password </Form.Label>\n          <Form.Control\n            type=\"password\"\n            onChange={(e) => setConfirmPassword(e.target.value)}\n            required\n          />\n        </Form.Group>\n        <div className=\"mb-3\">\n          <Button type=\"submit\">Update</Button>\n        </div>\n      </form>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}